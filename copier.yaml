# Basic project information
module_name:
  type: str
  help: Name of the module (e.g., gitlab, snyk, wiz)
  default: mymodule

module_display_name:
  type: str
  help: Display name of the module (e.g., GitLab, Snyk, Wiz)
  default: "{{ module_name | replace('-', ' ') | title }}"

# Author information
author_name:
  type: str
  help: Your name
  default:

author_email:
  type: str
  help: Your email
  default:

year:
  type: int
  help: "Copyright year"
  default: "{{ '%Y' | strftime }}"
  when: false

package_name:
  type: str
  help: The name of the package to be created (e.g., mymodule)
  default: clearskies_{{ module_name|replace('-', '_') }}
  when: false

create_backends:
  type: bool
  help: Does this module need backends?
  default: false

create_columns:
  type: bool
  help: Does this module need columns?
  default: false

create_configs:
  type: bool
  help: Does this module need configs?
  default: false

create_endpoints:
  type: bool
  help: Does this module need endpoints?
  default: false

create_models:
  type: bool
  help: Does this module need models?
  default: false

_subdirectory: template_content
_templates_suffix: .jinja

# Template metadata for updates
_envops:
  block_start_string: '{%'
  block_end_string: '%}'
  variable_start_string: '{{'
  variable_end_string: '}}'
  comment_start_string: '{#'
  comment_end_string: '#}'

# Make sure git metadata is preserved for updates
_preserve_symlinks: true

_skip_if_exists:
    - "pyproject.toml"
    - "uv.lock"
    - 'src/{{ package_name }}/__init__.py'
    - 'src/{{ package_name }}/**/__init__.py'

# Post-generation tasks
_tasks:
  - command: git init
    description: Initialize git repository
    wwhen: "{{ _copier_operation == 'copy' }}"
  - command: uv sync
    description: Install dependencies and create virtual environment
  - command: uv run pre-commit install
    description: Install pre-commit hooks
    when: "{{ _copier_operation == 'copy' }}"
  - command: git add .
    description: Stage all files
    when: "{{ _copier_operation == 'copy' }}"
  - command: uv run pre-commit run --all-files || true
    description: Run pre-commit on all files
  - command: uv lock --upgrade
    description: Update dependencies and update lock file
  - command: git add .
    description: Stage all files
    when: "{{ _copier_operation == 'copy' }}"
  - command: "git commit -m 'feat: Initial project setup'"
    description: Create initial commit
    when: "{{ _copier_operation == 'copy' }}"
  - command: "echo 'Project setup complete! Next steps: activate your venv, start coding, and check the README for more info.'"
    description: Print next steps
    when: "{{ _copier_operation == 'copy' }}"

_extensions:
  - jinja2_time.TimeExtension
